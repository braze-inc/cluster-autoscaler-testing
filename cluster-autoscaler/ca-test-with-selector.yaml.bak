apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.braze.com/allow-datadog-scrape: "true"
    app.braze.com/allow-prometheus-scrape: "true"
    app.braze.com/cost-center: research
    app.braze.com/deployment-env: t-usw-2
    app.braze.com/pagerduty: cloudops-on-call
    app.braze.com/product: cluster-autoscaler-stest
    app.braze.com/slack-channel: devops-cloudops-alerts
    app.kubernetes.io/instance: cluster-autoscaler-stest
    app.kubernetes.io/name: aws-cluster-autoscaler-stest
  name: cluster-autoscaler-aws-stest
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cluster-autoscaler-stest
      app.kubernetes.io/instance: cluster-autoscaler-stest
      app.kubernetes.io/name: aws-cluster-autoscaler-stest
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cluster-autoscaler-stest
        app.braze.com/allow-datadog-scrape: "true"
        app.braze.com/allow-prometheus-scrape: "true"
        app.braze.com/cost-center: research
        app.braze.com/deployment-env: t-usw-2
        app.braze.com/pagerduty: cloudops-on-call
        app.braze.com/product: cluster-autoscaler-stest
        app.braze.com/slack-channel: devops-cloudops-alerts
        app.kubernetes.io/instance: cluster-autoscaler-stest
        app.kubernetes.io/name: aws-cluster-autoscaler-stest
    spec:
      containers:
      - command:
        - ./cluster-autoscaler
        - --leader-elect-resource-name=cluster-autoscaler-stest
        - --cloud-provider=aws
        - --label-selector=app.kubernetes.io/name=thanos
        - --node-label-selector=node.kubernetes.io/instance-type=m6a.2xlarge
        - --namespace=core
        - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled-1,kubernetes.io/cluster/k8s.test-001.t-usw-2.braze.com,k8s.io/cluster-autoscaler/node-template/label/instancegroup-m6a.2xlarge
        - --balance-similar-node-groups=true
        - --balancing-ignore-label=k8s.io/cluster-autoscaler/node-template/label/topology.ebs.csi.aws.com/zone
        - --balancing-ignore-label=k8s.io/cluster-autoscaler/node-template/label/topology.kubernetes.io/zone
        - --balancing-ignore-label=kops.k8s.io/instancegroup
        - --balancing-ignore-label=zone
        - --daemonset-eviction-for-empty-nodes=false
        - --daemonset-eviction-for-occupied-nodes=false
        - --expander=priority
        - --initial-node-group-backoff-duration=30m
        - --logtostderr=true
        - --max-drain-parallelism=10
        - --max-node-provision-time=5m0s
        - --parallel-drain=true
        - --scale-down-delay-after-add=1m
        - --scale-down-unneeded-time=1m
        - --scale-down-unready-time=1m
        - --scale-down-utilization-threshold=0.83
        - --skip-nodes-with-local-storage=false
        - --stderrthreshold=info
        - --v=4
        env:
        - name: AWS_REGION
          value: us-west-2
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: AwsAccessKeyId
              name: cluster-autoscaler-aws-cluster-autoscaler
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: AwsSecretAccessKey
              name: cluster-autoscaler-aws-cluster-autoscaler
        image: artifactory.infra.braze.com/docker/braze-cluster-autoscaler:v0.0.3
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health-check
            port: 8085
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: aws-cluster-autoscaler
        ports:
        - containerPort: 8085
          protocol: TCP
        resources:
          limits:
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 4Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      priorityClassName: high-priority
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: cluster-autoscaler-aws-cluster-autoscaler
      serviceAccountName: cluster-autoscaler-aws-cluster-autoscaler
      terminationGracePeriodSeconds: 30
